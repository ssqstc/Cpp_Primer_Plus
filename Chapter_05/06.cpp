#include "iostream"
using namespace std;

/*
知识点总结和注意点：
1. 指针的基本操作：
   - `*pt` 表示指针指向的值。
   - `++pt` 表示指针地址的移动，指向下一个元素。
2. 指针操作符的优先级：
   - `*++pt`：先将指针移动到下一个元素，再获取该元素的值。
   - `++*pt`：先获取指针指向的值并递增，再存储回原地址。
   - `(*pt)++`：获取指针指向的值，再递增值。
   - `*pt++`：获取指针当前指向的值，再将指针移动到下一个元素。

注意点：
- 指针运算要注意运算符的优先级，理解每个表达式的执行顺序。
- 指针的移动会改变其指向的内存地址，注意对数组的访问范围。

*/

int main()
{
    double arr[5] = {21.1, 32.8, 23.4, 45.2, 37.4};
    double *pt = arr;

    cout << "*++pt = " << *++pt << endl;  // 先将指针pt移动到下一个元素，再获取该元素的值
    cout << "++*pt = " << ++*pt << endl;  // 先获取当前指向的值并递增，再存储回该位置
    cout << "(*pt)++ = " << (*pt)++ << endl;  // 先获取当前指向的值，再递增该值（输出递增前的值）
    cout << "*pt = " << *pt << endl;  // 获取递增后的值
    cout << "*pt++ = " << *pt++ << endl;  // 先获取当前指向的值，再将指针移动到下一个元素
    cout << "*pt = " << *pt << endl;  // 获取指针移动后的当前值

    return 0;
}
